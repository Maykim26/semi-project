{"mappings":"ACmMA,IAAI,EAAW,EAAE,CACjB,MAAM,EAAQ,SAAS,gBAAgB,CAAC,iBAClC,EAAa,SAAS,gBAAgB,CAAC,0BAE7C,EAAM,OAAO,CAAC,AAAC,GACd,EAAK,gBAAgB,CAAC,QAAS,AAAC,GAAU,EAAkB,KAE7D,EAAW,OAAO,CAAC,AAAC,GACnB,EAAK,gBAAgB,CAAC,QAAS,AAAC,GAAU,EAAkB,KAG7D,IAAI,EAAe,IA4BnB,MAAM,EAAoB,MAAO,IAChC,IAAM,EAAW,EAAM,MAAM,CAAC,WAAW,CAAC,WAAW,GAC/C,EAAW,MAAM,MACtB,sBAAsB,UAAuB,EAExC,EAAO,MAAM,EAAS,IAAI,GAEhC,EAAW,EAAK,QAAQ,CACxB,EAAe,EAAK,YAAY,CAChC,IACA,GACD,EAeM,EAAS,KACd,IAAM,EAAW,EACf,GAAG,CACH,AAAC,GAAS,CAAC;A;A;AAGO,qBAAA,EAClB,EAAK,UAAU,EACf,sGACA;A;A;AAGgD,mDAAA,EAAE,EAAK,GAAG,CAAC,EAAE,EAC5D,EAAK,KAAK,CACV;AAC+B,mCAAA,EAChC,AAAoB,MAApB,EAAK,WAAW,EAAY,AAAoB,IAApB,EAAK,WAAW,CACzC,OACA,EAAK,WAAW,CAAC,MAAM,CAAG,IAC1B,EAAK,WAAW,CAAC,SAAS,CAAC,EAAG,KAAO,MACrC,EAAK,WAAW,CACnB;A;AAE2B,8BAAA,EAAE,EAAK,MAAM,CAAC,IAAI,EAAI,YAAY;A;AAEpD,YAAA,EAAE,EAAK,WAAW,CAAC,KAAK,CAAC,EAAG,IAAI,GAAG,EAAE,OAC7C,EAAK,WAAW,CAAC,KAAK,CAAC,EAAG,KACzB,OAAO,GAAG;A;AAEL,UAAA,CAAC,EAER,IAAI,CAAC,GACP,CAAA,SAAS,cAAc,CAAC,cAAc,SAAS,CAAG,CACnD,EAGM,EAAc,AAAC,IACpB,IAAM,EAAY,CAAC;AAChB,IAAA,EAAE;AACI,UAAA,CAAC,AACV,CAAA,SAAS,cAAc,CAAC,cAAc,SAAS,CAAG,CACnD,EAGM,EAAmB,KACxB,IAAM,EAAa,KAAK,IAAI,CAAC,EAjGb,IAmGZ,EAAiB,GAEjB,EAAW,AApGE,EAiGC,KAAK,IAAI,CAAC,IAIxB,EAAW,GACd,CAAA,EAAW,CADZ,EAIA,IAAI,EACH,EAAY,GAAkB,EAC3B,EACA,EAAY,EAmBhB,IAAK,IAAI,EAAI,EAAW,GAAK,EAAU,IACtC,GAAkB,CAAC,qBAAqB,EACvC,AAnIQ,IAmIR,EAAa,SAAW,GACxB;AACoF,uFAAA,EAAE,EAAE,GAAG,EAAE,EAAE;AACrE,6BAAA,CAAC,AAtInB,CAAA,EA0IC,GACV,CAAA,GAAkB;AA1VpB;AAEA,8BA4V8B,AAAD,EA/IlB,EAmJC,GACV,CAAA,GAAkB,CAAC,0CAA0C,EAAE,EAAS;A;AAE7C,6BAAA,CAAC,AAAD,EAG5B,SAAS,aAAa,CAAC,eAAe,SAAS,CAAG,CACnD,EASA,AA9JgB,CAAA,UACf,GAAI,CACH,IAAM,EAAW,MAAM,MAAM,oBACvB,EAAO,MAAM,EAAS,IAAI,GAEhC,GAAI,AAAoB,MAApB,EAAS,MAAM,CAAU,CAC5B,GAAI,AAAyB,IAAzB,EAAK,QAAQ,CAAC,MAAM,CACvB,MAAM,AAAI,MAAM,6BAEjB,EAAW,EAAK,QAAQ,CACxB,EAAe,EAAK,YAAY,CAChC,IACA,GACD,MACC,MAAM,AAAI,MAAM,EAAK,OAAO,CAE9B,CAAE,MAAO,EAAO,CACf,EAAY,EAAM,OAAO,CAC1B,CACD,CAAA","sources":["<anon>","js/main.js"],"sourcesContent":["// const API_KEY = \"610915e3e6cc4331af1972661b12d75c\";\n// let newsList = [];\n// const menus = document.querySelectorAll(\".menus button\");\n// const side_menus = document.querySelectorAll(\".side-menu-list button\");\n// menus.forEach((menu) =>\n// \tmenu.addEventListener(\"click\", (event) => getNewsByCategory(event))\n// );\n// side_menus.forEach((menu) =>\n// \tmenu.addEventListener(\"click\", (event) => getNewsByCategory(event))\n// );\n// let url = new URL(\n// \t`https://newsapi.org/v2/top-headlines?country=us&apiKey=${API_KEY}`\n// );\n// let totalResults = 300;\n// let page = 1;\n// const pageSize = 10;\n// const groupSize = 5;\n// const getNews = async () => {\n// \ttry {\n// \t\turl.searchParams.set(\"page\", page);\n// \t\turl.searchParams.set(\"pageSize\", pageSize);\n// \t\tconst response = await fetch(url);\n// \t\tconst data = await response.json();\n// \t\tif (response.status === 200) {\n// \t\t\tif (data.articles.length === 0) {\n// \t\t\t\tthrow new Error(\"No result for this search\");\n// \t\t\t}\n// \t\t\tnewsList = data.articles;\n// \t\t\ttotalResults = data.totalResults;\n// \t\t\trender();\n// \t\t\tpaginationRender();\n// \t\t} else {\n// \t\t\tthrow new Error(data.message);\n// \t\t}\n// \t} catch (error) {\n// \t\terrorRender(error.message);\n// \t}\n// };\n// const getLatestNews = async () => {\n// \turl = new URL(\n// \t\t`https://newsapi.org/v2/top-headlines?country=us&apiKey=${API_KEY}`\n// \t);\n// \tgetNews();\n// };\n// const getNewsByCategory = async (event) => {\n// \tconst category = event.target.textContent.toLowerCase();\n// \turl = new URL(\n// \t\t`https://newsapi.org/v2/top-headlines?country=us&category=${category}&apiKey=${API_KEY}`\n// \t);\n// \tgetNews();\n// };\n// const getNewsByKeyword = async () => {\n// \tconst keyword = document.getElementById(\"search-input\").value;\n// \turl = new URL(\n// \t\t`https://newsapi.org/v2/top-headlines?country=us&q=${keyword}&apiKey=${API_KEY}`\n// \t);\n// \tgetNews();\n// };\n// const render = () => {\n// \tconst newsHTML = newsList\n// \t\t.map(\n// \t\t\t(news) => `<div class=\"news row\">\n//             <div class=\"col-lg-4\">\n//                 <img class=\"news-img-size\"\n//                     src=\"${\n// \t\t\t\tnews.urlToImage ||\n// \t\t\t\t\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRqEWgS0uxxEYJ0PsOb2OgwyWvC0Gjp8NUdPw&usqp=CAU\"\n// \t\t\t}\" />\n//             </div>\n//             <div class=\"col-lg-8\">\n//                 <a class=\"title\" target=\"_blank\" href=\"${news.url}\">${\n// \t\t\t\tnews.title\n// \t\t\t}</a>\n//                 <p class=\"description\">${\n// \t\t\tnews.description == null || news.description == \"\"\n// \t\t\t\t? \"내용없음\"\n// \t\t\t\t: news.description.length > 400\n// \t\t\t\t? news.description.substring(0, 400) + \"...\"\n// \t\t\t\t: news.description\n// \t\t}</p>\n//         <div class=\"block\">\n//                 <div class=\"name\">${news.source.name || \"no source\"}\n//                 </div><div class=\"date\">\n//                 ${news.publishedAt.slice(0, 10)}   ${moment(\n// \t\t\t\tnews.publishedAt.slice(0, 10) // \"2024-04-18\" 부분을 추출하여 moment 함수에 전달\n// \t\t\t).fromNow()}</div>\n//             </div></div>\n//         </div>\n// `\n// \t\t)\n// \t\t.join(\"\");\n// \tdocument.getElementById(\"news-board\").innerHTML = newsHTML;\n// };\n// getLatestNews();\n// render();\n// const errorRender = (errorRender) => {\n// \tconst errorHTML = `<div class=\"alert alert-danger\" role=\"alert\">\n//     ${errorRender}\n//     </div>`;\n// \tdocument.getElementById(\"news-board\").innerHTML = errorHTML;\n// };\n// const paginationRender = () => {\n// \tconst totalPages = Math.ceil(totalResults / pageSize); // 총 페이지 수\n// \tconst pageGroup = Math.ceil(page / groupSize); // 현재 페이지 그룹\n// \tlet paginationHTML = ``;\n// \tlet lastPage = pageGroup * groupSize; // 현재 그룹의 마지막 페이지\n// \tif (lastPage > totalPages) {\n// \t\tlastPage = totalPages;\n// \t}\n// \tlet firstPage =\n// \t\tlastPage - (groupSize - 1) <= 0\n// \t\t\t? 1\n// \t\t\t: lastPage - (groupSize - 1); // 현재 그룹의 첫 페이지\n// \t// **이전 그룹으로 이동 버튼**\n// \tif (page > 1) {\n// \t\t// 이전 페이지 버튼 활성화 조건 추가\n// \t\tpaginationHTML += `<li class=\"page-item\" onclick=\"moveToPage(${firstPage})\">\n//                                 <a class=\"page-link\" href=\"#js-bottom\">&lt;&lt; </a>\n//                             </li>`;\n// \t}\n// \t// **이전 그룹으로 이동 버튼**\n// \tif (page > 1) {\n// \t\t// 이전 페이지 버튼 활성화 조건 추가\n// \t\tpaginationHTML += `<li class=\"page-item\" onclick=\"moveToPage(${\n// \t\t\tpage - 1\n// \t\t})\">\n//                                 <a class=\"page-link\" href=\"#js-bottom\">&lt; </a>\n//                             </li>`;\n// \t}\n// \t// 현재 페이지 그룹의 번호들 렌더링\n// \tfor (let i = firstPage; i <= lastPage; i++) {\n// \t\tpaginationHTML += `<li class=\"page-item ${\n// \t\t\ti === page ? \"active\" : \"\"\n// \t\t}\">\n//                                 <a class=\"page-link\" href=\"#js-bottom\" onclick=\"moveToPage(${i})\">${i}</a>\n//                             </li>`;\n// \t}\n// \t// **다음 그룹으로 이동 버튼**\n// \tif (page < totalPages) {\n// \t\t// 다음 페이지 버튼 활성화 조건 추가\n// \t\tpaginationHTML += `<li class=\"page-item\" onclick=\"moveToPage(${\n// \t\t\tpage + 1\n// \t\t})\">\n//                                 <a class=\"page-link\" href=\"#js-bottom\"> &gt;</a>\n//                             </li>`;\n// \t} // **다음 그룹으로 이동 버튼**\n// \tif (page < totalPages) {\n// \t\t// 다음 페이지 버튼 활성화 조건 추가\n// \t\tpaginationHTML += `<li class=\"page-item\" onclick=\"moveToPage(${lastPage})\">\n//                                 <a class=\"page-link\" href=\"#js-bottom\"> &gt;&gt;</a>\n//                             </li>`;\n// \t}\n// \t// 결과 HTML 적용\n// \tdocument.querySelector(\".pagination\").innerHTML = paginationHTML;\n// };\n// const moveToPage = (pageNum) => {\n// \tpage = pageNum;\n// \twindow.scrollTo({ top: 0, behavior: \"smooth\" });\n// \tgetNews();\n// };\n// const openNav = () => {\n// \tdocument.getElementById(\"mySidenav\").style.width = \"250px\";\n// };\n// const closeNav = () => {\n// \tdocument.getElementById(\"mySidenav\").style.width = \"0\";\n// };\n// const openSearchBox = () => {\n// \tlet inputArea = document.getElementById(\"input-area\");\n// \tif (inputArea.style.display === \"inline\") {\n// \t\tinputArea.style.display = \"none\";\n// \t} else {\n// \t\tinputArea.style.display = \"inline\";\n// \t}\n// };\nconst API_KEY = \"610915e3e6cc4331af1972661b12d75c\"; // 이 키는 더 이상 클라이언트에서 사용하지 않습니다.\nlet newsList = [];\nconst menus = document.querySelectorAll(\".menus button\");\nconst side_menus = document.querySelectorAll(\".side-menu-list button\");\nmenus.forEach((menu)=>menu.addEventListener(\"click\", (event)=>getNewsByCategory(event)));\nside_menus.forEach((menu)=>menu.addEventListener(\"click\", (event)=>getNewsByCategory(event)));\nlet totalResults = 300;\nlet page = 1;\nconst pageSize = 10;\nconst groupSize = 5;\n// 클라이언트에서 서버로 뉴스 요청\nconst getNews = async ()=>{\n    try {\n        const response = await fetch(`/api/news?page=${page}`);\n        const data = await response.json();\n        if (response.status === 200) {\n            if (data.articles.length === 0) throw new Error(\"No result for this search\");\n            newsList = data.articles;\n            totalResults = data.totalResults;\n            render();\n            paginationRender();\n        } else throw new Error(data.message);\n    } catch (error) {\n        errorRender(error.message);\n    }\n};\n// 카테고리별 뉴스 요청\nconst getNewsByCategory = async (event)=>{\n    const category = event.target.textContent.toLowerCase();\n    const response = await fetch(`/api/news?category=${category}&page=${page}`);\n    const data = await response.json();\n    newsList = data.articles;\n    totalResults = data.totalResults;\n    render();\n    paginationRender();\n};\n// 검색어로 뉴스 요청\nconst getNewsByKeyword = async ()=>{\n    const keyword = document.getElementById(\"search-input\").value;\n    const response = await fetch(`/api/news?q=${keyword}&page=${page}`);\n    const data = await response.json();\n    newsList = data.articles;\n    totalResults = data.totalResults;\n    render();\n    paginationRender();\n};\n// 렌더링 함수\nconst render = ()=>{\n    const newsHTML = newsList.map((news)=>`<div class=\"news row\">\n        <div class=\"col-lg-4\">\n            <img class=\"news-img-size\"\n                src=\"${news.urlToImage || \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRqEWgS0uxxEYJ0PsOb2OgwyWvC0Gjp8NUdPw&usqp=CAU\"}\" />\n        </div>\n        <div class=\"col-lg-8\">\n            <a class=\"title\" target=\"_blank\" href=\"${news.url}\">${news.title}</a>\n            <p class=\"description\">${news.description == null || news.description == \"\" ? \"\\uB0B4\\uC6A9\\uC5C6\\uC74C\" : news.description.length > 400 ? news.description.substring(0, 400) + \"...\" : news.description}</p>\n        <div class=\"block\">\n            <div class=\"name\">${news.source.name || \"no source\"} \n            </div><div class=\"date\">\n            ${news.publishedAt.slice(0, 10)}   ${moment(news.publishedAt.slice(0, 10)).fromNow()}</div>\n        </div></div>\n    </div>`).join(\"\");\n    document.getElementById(\"news-board\").innerHTML = newsHTML;\n};\n// 오류 처리 함수\nconst errorRender = (errorRender)=>{\n    const errorHTML = `<div class=\"alert alert-danger\" role=\"alert\">\n    ${errorRender}\n    </div>`;\n    document.getElementById(\"news-board\").innerHTML = errorHTML;\n};\n// 페이지네이션 렌더링\nconst paginationRender = ()=>{\n    const totalPages = Math.ceil(totalResults / pageSize); // 총 페이지 수\n    const pageGroup = Math.ceil(page / groupSize); // 현재 페이지 그룹\n    let paginationHTML = ``;\n    let lastPage = pageGroup * groupSize; // 현재 그룹의 마지막 페이지\n    if (lastPage > totalPages) lastPage = totalPages;\n    let firstPage = lastPage - (groupSize - 1) <= 0 ? 1 : lastPage - (groupSize - 1); // 현재 그룹의 첫 페이지\n    // **이전 그룹으로 이동 버튼**\n    if (page > 1) paginationHTML += `<li class=\"page-item\" onclick=\"moveToPage(${firstPage})\">\n                            <a class=\"page-link\" href=\"#js-bottom\">&lt;&lt; </a>\n                        </li>`;\n    // **이전 페이지로 이동 버튼**\n    if (page > 1) paginationHTML += `<li class=\"page-item\" onclick=\"moveToPage(${page - 1})\">\n                            <a class=\"page-link\" href=\"#js-bottom\">&lt; </a>\n                        </li>`;\n    // 현재 페이지 그룹의 번호들 렌더링\n    for(let i = firstPage; i <= lastPage; i++)paginationHTML += `<li class=\"page-item ${i === page ? \"active\" : \"\"}\">\n                            <a class=\"page-link\" href=\"#js-bottom\" onclick=\"moveToPage(${i})\">${i}</a>\n                        </li>`;\n    // **다음 페이지로 이동 버튼**\n    if (page < totalPages) paginationHTML += `<li class=\"page-item\" onclick=\"moveToPage(${page + 1})\">\n                            <a class=\"page-link\" href=\"#js-bottom\"> &gt;</a>\n                        </li>`;\n    // **다음 그룹으로 이동 버튼**\n    if (page < totalPages) paginationHTML += `<li class=\"page-item\" onclick=\"moveToPage(${lastPage})\">\n                            <a class=\"page-link\" href=\"#js-bottom\"> &gt;&gt;</a>\n                        </li>`;\n    document.querySelector(\".pagination\").innerHTML = paginationHTML;\n};\nconst moveToPage = (pageNum)=>{\n    page = pageNum;\n    window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n    });\n    getNews();\n};\n// 초기 뉴스 로드\ngetNews();\n\n//# sourceMappingURL=index.9447860e.js.map\n","// const API_KEY = \"610915e3e6cc4331af1972661b12d75c\";\n// let newsList = [];\n// const menus = document.querySelectorAll(\".menus button\");\n// const side_menus = document.querySelectorAll(\".side-menu-list button\");\n// menus.forEach((menu) =>\n// \tmenu.addEventListener(\"click\", (event) => getNewsByCategory(event))\n// );\n// side_menus.forEach((menu) =>\n// \tmenu.addEventListener(\"click\", (event) => getNewsByCategory(event))\n// );\n// let url = new URL(\n// \t`https://newsapi.org/v2/top-headlines?country=us&apiKey=${API_KEY}`\n// );\n// let totalResults = 300;\n// let page = 1;\n// const pageSize = 10;\n// const groupSize = 5;\n\n// const getNews = async () => {\n// \ttry {\n// \t\turl.searchParams.set(\"page\", page);\n// \t\turl.searchParams.set(\"pageSize\", pageSize);\n\n// \t\tconst response = await fetch(url);\n\n// \t\tconst data = await response.json();\n// \t\tif (response.status === 200) {\n// \t\t\tif (data.articles.length === 0) {\n// \t\t\t\tthrow new Error(\"No result for this search\");\n// \t\t\t}\n// \t\t\tnewsList = data.articles;\n// \t\t\ttotalResults = data.totalResults;\n// \t\t\trender();\n// \t\t\tpaginationRender();\n// \t\t} else {\n// \t\t\tthrow new Error(data.message);\n// \t\t}\n// \t} catch (error) {\n// \t\terrorRender(error.message);\n// \t}\n// };\n\n// const getLatestNews = async () => {\n// \turl = new URL(\n// \t\t`https://newsapi.org/v2/top-headlines?country=us&apiKey=${API_KEY}`\n// \t);\n\n// \tgetNews();\n// };\n\n// const getNewsByCategory = async (event) => {\n// \tconst category = event.target.textContent.toLowerCase();\n// \turl = new URL(\n// \t\t`https://newsapi.org/v2/top-headlines?country=us&category=${category}&apiKey=${API_KEY}`\n// \t);\n// \tgetNews();\n// };\n\n// const getNewsByKeyword = async () => {\n// \tconst keyword = document.getElementById(\"search-input\").value;\n// \turl = new URL(\n// \t\t`https://newsapi.org/v2/top-headlines?country=us&q=${keyword}&apiKey=${API_KEY}`\n// \t);\n// \tgetNews();\n// };\n\n// const render = () => {\n// \tconst newsHTML = newsList\n// \t\t.map(\n// \t\t\t(news) => `<div class=\"news row\">\n//             <div class=\"col-lg-4\">\n//                 <img class=\"news-img-size\"\n//                     src=\"${\n// \t\t\t\tnews.urlToImage ||\n// \t\t\t\t\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRqEWgS0uxxEYJ0PsOb2OgwyWvC0Gjp8NUdPw&usqp=CAU\"\n// \t\t\t}\" />\n//             </div>\n//             <div class=\"col-lg-8\">\n//                 <a class=\"title\" target=\"_blank\" href=\"${news.url}\">${\n// \t\t\t\tnews.title\n// \t\t\t}</a>\n//                 <p class=\"description\">${\n// \t\t\tnews.description == null || news.description == \"\"\n// \t\t\t\t? \"내용없음\"\n// \t\t\t\t: news.description.length > 400\n// \t\t\t\t? news.description.substring(0, 400) + \"...\"\n// \t\t\t\t: news.description\n// \t\t}</p>\n//         <div class=\"block\">\n//                 <div class=\"name\">${news.source.name || \"no source\"}\n//                 </div><div class=\"date\">\n//                 ${news.publishedAt.slice(0, 10)}   ${moment(\n// \t\t\t\tnews.publishedAt.slice(0, 10) // \"2024-04-18\" 부분을 추출하여 moment 함수에 전달\n// \t\t\t).fromNow()}</div>\n//             </div></div>\n//         </div>\n// `\n// \t\t)\n// \t\t.join(\"\");\n// \tdocument.getElementById(\"news-board\").innerHTML = newsHTML;\n// };\n\n// getLatestNews();\n// render();\n\n// const errorRender = (errorRender) => {\n// \tconst errorHTML = `<div class=\"alert alert-danger\" role=\"alert\">\n//     ${errorRender}\n//     </div>`;\n// \tdocument.getElementById(\"news-board\").innerHTML = errorHTML;\n// };\n\n// const paginationRender = () => {\n// \tconst totalPages = Math.ceil(totalResults / pageSize); // 총 페이지 수\n// \tconst pageGroup = Math.ceil(page / groupSize); // 현재 페이지 그룹\n// \tlet paginationHTML = ``;\n\n// \tlet lastPage = pageGroup * groupSize; // 현재 그룹의 마지막 페이지\n// \tif (lastPage > totalPages) {\n// \t\tlastPage = totalPages;\n// \t}\n\n// \tlet firstPage =\n// \t\tlastPage - (groupSize - 1) <= 0\n// \t\t\t? 1\n// \t\t\t: lastPage - (groupSize - 1); // 현재 그룹의 첫 페이지\n// \t// **이전 그룹으로 이동 버튼**\n// \tif (page > 1) {\n// \t\t// 이전 페이지 버튼 활성화 조건 추가\n// \t\tpaginationHTML += `<li class=\"page-item\" onclick=\"moveToPage(${firstPage})\">\n//                                 <a class=\"page-link\" href=\"#js-bottom\">&lt;&lt; </a>\n//                             </li>`;\n// \t}\n// \t// **이전 그룹으로 이동 버튼**\n// \tif (page > 1) {\n// \t\t// 이전 페이지 버튼 활성화 조건 추가\n// \t\tpaginationHTML += `<li class=\"page-item\" onclick=\"moveToPage(${\n// \t\t\tpage - 1\n// \t\t})\">\n//                                 <a class=\"page-link\" href=\"#js-bottom\">&lt; </a>\n//                             </li>`;\n// \t}\n\n// \t// 현재 페이지 그룹의 번호들 렌더링\n// \tfor (let i = firstPage; i <= lastPage; i++) {\n// \t\tpaginationHTML += `<li class=\"page-item ${\n// \t\t\ti === page ? \"active\" : \"\"\n// \t\t}\">\n//                                 <a class=\"page-link\" href=\"#js-bottom\" onclick=\"moveToPage(${i})\">${i}</a>\n//                             </li>`;\n// \t}\n\n// \t// **다음 그룹으로 이동 버튼**\n// \tif (page < totalPages) {\n// \t\t// 다음 페이지 버튼 활성화 조건 추가\n// \t\tpaginationHTML += `<li class=\"page-item\" onclick=\"moveToPage(${\n// \t\t\tpage + 1\n// \t\t})\">\n//                                 <a class=\"page-link\" href=\"#js-bottom\"> &gt;</a>\n//                             </li>`;\n// \t} // **다음 그룹으로 이동 버튼**\n// \tif (page < totalPages) {\n// \t\t// 다음 페이지 버튼 활성화 조건 추가\n// \t\tpaginationHTML += `<li class=\"page-item\" onclick=\"moveToPage(${lastPage})\">\n//                                 <a class=\"page-link\" href=\"#js-bottom\"> &gt;&gt;</a>\n//                             </li>`;\n// \t}\n\n// \t// 결과 HTML 적용\n// \tdocument.querySelector(\".pagination\").innerHTML = paginationHTML;\n// };\n\n// const moveToPage = (pageNum) => {\n// \tpage = pageNum;\n// \twindow.scrollTo({ top: 0, behavior: \"smooth\" });\n// \tgetNews();\n// };\n// const openNav = () => {\n// \tdocument.getElementById(\"mySidenav\").style.width = \"250px\";\n// };\n\n// const closeNav = () => {\n// \tdocument.getElementById(\"mySidenav\").style.width = \"0\";\n// };\n\n// const openSearchBox = () => {\n// \tlet inputArea = document.getElementById(\"input-area\");\n// \tif (inputArea.style.display === \"inline\") {\n// \t\tinputArea.style.display = \"none\";\n// \t} else {\n// \t\tinputArea.style.display = \"inline\";\n// \t}\n// };\n\nconst API_KEY = \"610915e3e6cc4331af1972661b12d75c\"; // 이 키는 더 이상 클라이언트에서 사용하지 않습니다.\nlet newsList = [];\nconst menus = document.querySelectorAll(\".menus button\");\nconst side_menus = document.querySelectorAll(\".side-menu-list button\");\n\nmenus.forEach((menu) =>\n\tmenu.addEventListener(\"click\", (event) => getNewsByCategory(event))\n);\nside_menus.forEach((menu) =>\n\tmenu.addEventListener(\"click\", (event) => getNewsByCategory(event))\n);\n\nlet totalResults = 300;\nlet page = 1;\nconst pageSize = 10;\nconst groupSize = 5;\n\n// 클라이언트에서 서버로 뉴스 요청\nconst getNews = async () => {\n\ttry {\n\t\tconst response = await fetch(`/api/news?page=${page}`);\n\t\tconst data = await response.json();\n\n\t\tif (response.status === 200) {\n\t\t\tif (data.articles.length === 0) {\n\t\t\t\tthrow new Error(\"No result for this search\");\n\t\t\t}\n\t\t\tnewsList = data.articles;\n\t\t\ttotalResults = data.totalResults;\n\t\t\trender();\n\t\t\tpaginationRender();\n\t\t} else {\n\t\t\tthrow new Error(data.message);\n\t\t}\n\t} catch (error) {\n\t\terrorRender(error.message);\n\t}\n};\n\n// 카테고리별 뉴스 요청\nconst getNewsByCategory = async (event) => {\n\tconst category = event.target.textContent.toLowerCase();\n\tconst response = await fetch(\n\t\t`/api/news?category=${category}&page=${page}`\n\t);\n\tconst data = await response.json();\n\n\tnewsList = data.articles;\n\ttotalResults = data.totalResults;\n\trender();\n\tpaginationRender();\n};\n\n// 검색어로 뉴스 요청\nconst getNewsByKeyword = async () => {\n\tconst keyword = document.getElementById(\"search-input\").value;\n\tconst response = await fetch(`/api/news?q=${keyword}&page=${page}`);\n\tconst data = await response.json();\n\n\tnewsList = data.articles;\n\ttotalResults = data.totalResults;\n\trender();\n\tpaginationRender();\n};\n\n// 렌더링 함수\nconst render = () => {\n\tconst newsHTML = newsList\n\t\t.map(\n\t\t\t(news) => `<div class=\"news row\">\n        <div class=\"col-lg-4\">\n            <img class=\"news-img-size\"\n                src=\"${\n\t\t\tnews.urlToImage ||\n\t\t\t\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRqEWgS0uxxEYJ0PsOb2OgwyWvC0Gjp8NUdPw&usqp=CAU\"\n\t\t}\" />\n        </div>\n        <div class=\"col-lg-8\">\n            <a class=\"title\" target=\"_blank\" href=\"${news.url}\">${\n\t\t\t\tnews.title\n\t\t\t}</a>\n            <p class=\"description\">${\n\t\t\tnews.description == null || news.description == \"\"\n\t\t\t\t? \"내용없음\"\n\t\t\t\t: news.description.length > 400\n\t\t\t\t? news.description.substring(0, 400) + \"...\"\n\t\t\t\t: news.description\n\t\t}</p>\n        <div class=\"block\">\n            <div class=\"name\">${news.source.name || \"no source\"} \n            </div><div class=\"date\">\n            ${news.publishedAt.slice(0, 10)}   ${moment(\n\t\t\t\tnews.publishedAt.slice(0, 10)\n\t\t\t).fromNow()}</div>\n        </div></div>\n    </div>`\n\t\t)\n\t\t.join(\"\");\n\tdocument.getElementById(\"news-board\").innerHTML = newsHTML;\n};\n\n// 오류 처리 함수\nconst errorRender = (errorRender) => {\n\tconst errorHTML = `<div class=\"alert alert-danger\" role=\"alert\">\n    ${errorRender}\n    </div>`;\n\tdocument.getElementById(\"news-board\").innerHTML = errorHTML;\n};\n\n// 페이지네이션 렌더링\nconst paginationRender = () => {\n\tconst totalPages = Math.ceil(totalResults / pageSize); // 총 페이지 수\n\tconst pageGroup = Math.ceil(page / groupSize); // 현재 페이지 그룹\n\tlet paginationHTML = ``;\n\n\tlet lastPage = pageGroup * groupSize; // 현재 그룹의 마지막 페이지\n\tif (lastPage > totalPages) {\n\t\tlastPage = totalPages;\n\t}\n\n\tlet firstPage =\n\t\tlastPage - (groupSize - 1) <= 0\n\t\t\t? 1\n\t\t\t: lastPage - (groupSize - 1); // 현재 그룹의 첫 페이지\n\n\t// **이전 그룹으로 이동 버튼**\n\tif (page > 1) {\n\t\tpaginationHTML += `<li class=\"page-item\" onclick=\"moveToPage(${firstPage})\">\n                            <a class=\"page-link\" href=\"#js-bottom\">&lt;&lt; </a>\n                        </li>`;\n\t}\n\n\t// **이전 페이지로 이동 버튼**\n\tif (page > 1) {\n\t\tpaginationHTML += `<li class=\"page-item\" onclick=\"moveToPage(${\n\t\t\tpage - 1\n\t\t})\">\n                            <a class=\"page-link\" href=\"#js-bottom\">&lt; </a>\n                        </li>`;\n\t}\n\n\t// 현재 페이지 그룹의 번호들 렌더링\n\tfor (let i = firstPage; i <= lastPage; i++) {\n\t\tpaginationHTML += `<li class=\"page-item ${\n\t\t\ti === page ? \"active\" : \"\"\n\t\t}\">\n                            <a class=\"page-link\" href=\"#js-bottom\" onclick=\"moveToPage(${i})\">${i}</a>\n                        </li>`;\n\t}\n\n\t// **다음 페이지로 이동 버튼**\n\tif (page < totalPages) {\n\t\tpaginationHTML += `<li class=\"page-item\" onclick=\"moveToPage(${\n\t\t\tpage + 1\n\t\t})\">\n                            <a class=\"page-link\" href=\"#js-bottom\"> &gt;</a>\n                        </li>`;\n\t}\n\n\t// **다음 그룹으로 이동 버튼**\n\tif (page < totalPages) {\n\t\tpaginationHTML += `<li class=\"page-item\" onclick=\"moveToPage(${lastPage})\">\n                            <a class=\"page-link\" href=\"#js-bottom\"> &gt;&gt;</a>\n                        </li>`;\n\t}\n\n\tdocument.querySelector(\".pagination\").innerHTML = paginationHTML;\n};\n\nconst moveToPage = (pageNum) => {\n\tpage = pageNum;\n\twindow.scrollTo({ top: 0, behavior: \"smooth\" });\n\tgetNews();\n};\n\n// 초기 뉴스 로드\ngetNews();\n"],"names":["newsList","menus","document","querySelectorAll","side_menus","forEach","menu","addEventListener","event","getNewsByCategory","totalResults","category","target","textContent","toLowerCase","response","fetch","data","json","articles","render","paginationRender","newsHTML","map","news","urlToImage","url","title","description","length","substring","source","name","publishedAt","slice","moment","fromNow","join","getElementById","innerHTML","errorRender","errorHTML","totalPages","Math","ceil","paginationHTML","lastPage","pageGroup","page","firstPage","groupSize","i","querySelector","getNews","status","Error","message","error"],"version":3,"file":"index.9447860e.js.map"}