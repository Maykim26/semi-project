{"mappings":"ACAA,IAAI,EAAY,SAAS,cAAc,CAAC,cACpC,EAAS,SAAS,cAAc,CAAC,WACjC,EAAO,SAAS,gBAAgB,CAAC,kBACjC,EAAY,SAAS,cAAc,CAAC,aACpC,EAAW,EAAE,CACb,EAAO,MACP,EAAa,EAAE,CAEnB,EAAO,gBAAgB,CAAC,YAAa,GACrC,EAAU,gBAAgB,CAAC,UAAW,SAAU,CAAK,EAC9B,KAAlB,EAAM,OAAO,EAAS,EAAQ,EACnC,GAEA,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAChC,CAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,QAAS,SAAU,CAAK,EACzC,IAqDP,EAAO,AArDA,EAqDE,MAAM,CAAC,EAAE,CAClB,EAAU,KAAK,CAAC,KAAK,CAAG,CAAA,EAAG,AAtDpB,EAsDsB,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CACnD,EAAU,KAAK,CAAC,IAAI,CAAG,CAAA,EAAG,AAvDnB,EAuDqB,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CACjD,EAAU,KAAK,CAAC,GAAG,CAAG,CAAA,EACrB,AAzDM,EAyDJ,MAAM,CAAC,SAAS,CAAG,AAzDf,EAyDiB,MAAM,CAAC,YAAY,CAAG,EAC7C,EAAE,CAAC,EAGL,EAAa,EAAS,MAAM,CAAC,AAAC,GAC7B,AAAS,YAAT,EAAqB,CAAC,EAAK,UAAU,CAAG,EAAK,UAAU,EAExD,GA/DA,GAGD,SAAS,IACR,IAAI,EAAY,EAAU,KAAK,CAC/B,GAAI,AAAc,KAAd,EAAkB,OAAO,MAAM,cACnC,IAAI,EAAO,CACV,GA4DM,IAAM,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,EAAG,GA3DjD,WAAY,CAAA,EACZ,YAAa,CACd,EACA,EAAS,IAAI,CAAC,GACd,EAAU,KAAK,CAAG,GAClB,GACD,CAEA,SAAS,IACR,IAAI,EAAa,GACb,EAAO,AAAS,QAAT,EAAiB,EAAW,EAEvC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAAK,CACrC,IAAM,EAAO,CAAI,CAAC,EAAE,CACpB,GAAc;AACa,6BAAA,EAAE,EAAK,UAAU,CAAG,YAAc,GAAG;AAC7C,qBAAA,EAAE,EAAK,WAAW,CAAC;A;AAE8B,sEAAA,EAClE,EAAK,EAAE,CACP;AAC+D,mEAAA,EAC/D,EAAK,EAAE,CACP;A;AAEc,kBAAA,CAAC,AAClB,CAEA,SAAS,cAAc,CAAC,cAAc,SAAS,CAAG,CACnD","sources":["<anon>","js/main.js"],"sourcesContent":["let taskInput = document.getElementById(\"task-input\");\nlet addBtn = document.getElementById(\"add-btn\");\nlet tabs = document.querySelectorAll(\".task-tabs div\");\nlet underLine = document.getElementById(\"underline\");\nlet taskList = [];\nlet mode = \"all\";\nlet filterList = [];\naddBtn.addEventListener(\"mousedown\", addTask);\ntaskInput.addEventListener(\"keydown\", function(event) {\n    if (event.keyCode === 13) addTask(event);\n});\nfor(let i = 1; i < tabs.length; i++)tabs[i].addEventListener(\"click\", function(event) {\n    filter(event);\n});\nfunction addTask() {\n    let taskValue = taskInput.value;\n    if (taskValue === \"\") return alert(\"\\uD560\\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\");\n    let task = {\n        id: randomIDGenerate(),\n        isComplete: false,\n        taskContent: taskValue\n    };\n    taskList.push(task);\n    taskInput.value = \"\";\n    render();\n}\nfunction render() {\n    let resultHTML = \"\";\n    let list = mode === \"all\" ? taskList : filterList;\n    for(let i = 0; i < list.length; i++){\n        const task = list[i];\n        resultHTML += `\n            <div class=\"task ${task.isComplete ? \"task-done\" : \"\"}\">\n                <div>${task.taskContent}</div>\n                <div>\n                    <button class=\"checkBtn\" onclick=\"toggleComplete('${task.id}')\"></button>\n                    <button class=\"deleteBtn\" onclick=\"deleteTask('${task.id}')\"></button>\n                </div>\n            </div>`;\n    }\n    document.getElementById(\"task-board\").innerHTML = resultHTML;\n}\nfunction toggleComplete(id) {\n    const task = taskList.find((task)=>task.id === id);\n    task.isComplete = !task.isComplete;\n    filter();\n}\nfunction deleteTask(id) {\n    taskList = taskList.filter((task)=>task.id !== id);\n    filter();\n}\nfunction filter(e) {\n    if (e) {\n        mode = e.target.id;\n        underLine.style.width = `${e.target.offsetWidth}px`;\n        underLine.style.left = `${e.target.offsetLeft}px`;\n        underLine.style.top = `${e.target.offsetTop + e.target.offsetHeight - 4}px`;\n    }\n    filterList = taskList.filter((task)=>mode === \"ongoing\" ? !task.isComplete : task.isComplete);\n    render();\n}\nfunction randomIDGenerate() {\n    return \"_\" + Math.random().toString(36).substr(2, 9);\n}\n\n//# sourceMappingURL=index.c143cce2.js.map\n","let taskInput = document.getElementById(\"task-input\");\nlet addBtn = document.getElementById(\"add-btn\");\nlet tabs = document.querySelectorAll(\".task-tabs div\");\nlet underLine = document.getElementById(\"underline\");\nlet taskList = [];\nlet mode = \"all\";\nlet filterList = [];\n\naddBtn.addEventListener(\"mousedown\", addTask);\ntaskInput.addEventListener(\"keydown\", function (event) {\n\tif (event.keyCode === 13) addTask(event);\n});\n\nfor (let i = 1; i < tabs.length; i++) {\n\ttabs[i].addEventListener(\"click\", function (event) {\n\t\tfilter(event);\n\t});\n}\n\nfunction addTask() {\n\tlet taskValue = taskInput.value;\n\tif (taskValue === \"\") return alert(\"할일을 입력해주세요\");\n\tlet task = {\n\t\tid: randomIDGenerate(),\n\t\tisComplete: false,\n\t\ttaskContent: taskValue,\n\t};\n\ttaskList.push(task);\n\ttaskInput.value = \"\";\n\trender();\n}\n\nfunction render() {\n\tlet resultHTML = \"\";\n\tlet list = mode === \"all\" ? taskList : filterList;\n\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst task = list[i];\n\t\tresultHTML += `\n            <div class=\"task ${task.isComplete ? \"task-done\" : \"\"}\">\n                <div>${task.taskContent}</div>\n                <div>\n                    <button class=\"checkBtn\" onclick=\"toggleComplete('${\n\t\t\t\ttask.id\n\t\t\t}')\"></button>\n                    <button class=\"deleteBtn\" onclick=\"deleteTask('${\n\t\t\t\ttask.id\n\t\t\t}')\"></button>\n                </div>\n            </div>`;\n\t}\n\n\tdocument.getElementById(\"task-board\").innerHTML = resultHTML;\n}\n\nfunction toggleComplete(id) {\n\tconst task = taskList.find((task) => task.id === id);\n\ttask.isComplete = !task.isComplete;\n\tfilter();\n}\n\nfunction deleteTask(id) {\n\ttaskList = taskList.filter((task) => task.id !== id);\n\tfilter();\n}\n\nfunction filter(e) {\n\tif (e) {\n\t\tmode = e.target.id;\n\t\tunderLine.style.width = `${e.target.offsetWidth}px`;\n\t\tunderLine.style.left = `${e.target.offsetLeft}px`;\n\t\tunderLine.style.top = `${\n\t\t\te.target.offsetTop + e.target.offsetHeight - 4\n\t\t}px`;\n\t}\n\n\tfilterList = taskList.filter((task) =>\n\t\tmode === \"ongoing\" ? !task.isComplete : task.isComplete\n\t);\n\trender();\n}\n\nfunction randomIDGenerate() {\n\treturn \"_\" + Math.random().toString(36).substr(2, 9);\n}\n"],"names":["taskInput","document","getElementById","addBtn","tabs","querySelectorAll","underLine","taskList","mode","filterList","addEventListener","addTask","event","keyCode","i","length","e","target","id","style","width","offsetWidth","left","offsetLeft","top","offsetTop","offsetHeight","filter","task","isComplete","render","taskValue","value","alert","Math","random","toString","substr","taskContent","push","resultHTML","list","innerHTML"],"version":3,"file":"index.c143cce2.js.map"}